import{a as p,S as L,i as s}from"./assets/vendor-5401a4b0.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const d of a.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&n(d)}).observe(document,{childList:!0,subtree:!0});function i(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function n(e){if(e.ep)return;e.ep=!0;const a=i(e);fetch(e.href,a)}})();const b="42476870-3a5632db826cc102513b658b4",v="https://pixabay.com",w="/api/";async function m(t,r){const i=`?key=${b}&q=${t}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15&page=${r}`,n=`${v}${w}${i}`;try{const e=await p.get(n);if(e.status!==200)throw new Error(e.status);if(e.data.hits&&e.data.hits.length>0)return e.data;throw new Error("No images found")}catch(e){throw new Error(`Failed to fetch images from Pixabay API: ${e.message}`)}}const E=new L(".img-container a",{overlay:!0,overlayOpacity:.9,animationSpeed:1e3,scrollZoomFactor:.1,navText:["←","→"],captionsData:"alt",captionDelay:250});function u(t,r,i=2e3){t.infoEl.innerHTML="",!r||r.length===0?s.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"center",transitionIn:"fadeInLeft"}):(r.slice(0,i).forEach(n=>{const e=I(n);t.infoEl.insertAdjacentHTML("beforeend",e)}),E.refresh())}function I(t){return`<div class="image-box">
          <div class="general-frame">

            <div class="image-container">
              <a href="${t.largeImageURL}" data-lightbox="gallery">
              <img src="${t.webformatURL}" alt="${t.tags}" class="my-image">
              </a>
            </div>
             
            <div class="image-body">
                <ul class="ul-item">
                 <li class="image-li">Likes <span style="font-weight: normal;">${t.likes}</span></li>
                 <li class="image-li">Views <span style="font-weight: normal;">${t.views}</span></li>
                 <li class="image-li">Comments <span style="font-weight: normal;">${t.comments}</span></li>
                 <li class="image-li">Downloads <span style="font-weight: normal;">${t.downloads}</span></li>
                </ul>
              </div>
          </div>
    </div>`}const o={formEl:document.querySelector(".search-form"),infoEl:document.querySelector(".img-container"),loader:document.querySelector(".loader"),btnLoadMore:document.querySelector(".js-btn-load")};let c,l,g;o.formEl.addEventListener("submit",M);o.btnLoadMore.addEventListener("click",S);function P(){o.btnLoadMore.classList.remove("is-hidden")}function $(){o.btnLoadMore.classList.add("is-hidden")}async function M(t){if(t.preventDefault(),c=t.target.elements.query.value.trim(),l=1,h(),c===""){s.error({message:"Please enter a search query",position:"center",transitionIn:"fadeInLeft"});return}t.currentTarget.elements.query.value="";try{const r=await m(c,l);o.infoEl.innerHTML="",r.hits&&r.hits.length>0?(u(o,r.hits),f(),g=Math.ceil(r.totalHits/15)):s.error({message:"No images found for the given query",position:"center",transitionIn:"fadeInLeft"})}catch(r){console.error(r),s.error({message:"Failed to fetch images. Please try again later.",position:"center",transitionIn:"fadeInLeft"})}finally{t.target.reset(),y()}}async function S(){l+=1,h();try{const t=await m(c,l);u(o,t.hits),f(),y()}catch(t){console.error(t),s.error({message:"Failed to fetch more images. Please try again later.",position:"center",transitionIn:"fadeInLeft"}),f()}o.formEl.firstElementChild.getBoundingClientRect().height}function h(){o.loader.classList.remove("is-hidden")}function f(){o.loader.classList.add("is-hidden")}function y(){l>=g?$():P()}
//# sourceMappingURL=commonHelpers.js.map
