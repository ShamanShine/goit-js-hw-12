import{a as p,S as L,i as n}from"./assets/vendor-5401a4b0.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const d of o.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&l(d)}).observe(document,{childList:!0,subtree:!0});function s(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(t){if(t.ep)return;t.ep=!0;const o=s(t);fetch(t.href,o)}})();const b="42476870-3a5632db826cc102513b658b4",w="https://pixabay.com",v="/api/";async function u(r,e){const s=`?key=${b}&q=${r}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15&page=${e}`,l=`${w}${v}${s}`;try{const t=await p.get(l);if(t.status!==200)throw new Error(t.status);if(t.data.hits&&t.data.hits.length>0)return t.data;throw new Error("No images found")}catch(t){throw new Error(`Failed to fetch images from Pixabay API: ${t.message}`)}}const I=new L(".img-container a",{overlay:!0,overlayOpacity:.9,animationSpeed:1e3,scrollZoomFactor:.1,navText:["←","→"],captionsData:"alt",captionDelay:250});function g(r,e){if(!e||e.length===0)n.error({message:"Sorry, there are no images matching your search query. Please try again!",position:"center",transitionIn:"fadeInLeft"});else{const s=E(e);r.infoEl.insertAdjacentHTML("beforeend",s),I.refresh()}}function E(r){return r.map(e=>`<div class="image-box">
          <div class="general-frame">

            <div class="image-container">
              <a href="${e.largeImageURL}" data-lightbox="gallery">
              <img src="${e.webformatURL}" alt="${e.tags}" class="my-image">
              </a>
            </div>
             
            <div class="image-body">
                <ul class="ul-item">
                 <li class="image-li">Likes <span style="font-weight: normal;">${e.likes}</span></li>
                 <li class="image-li">Views <span style="font-weight: normal;">${e.views}</span></li>
                 <li class="image-li">Comments <span style="font-weight: normal;">${e.comments}</span></li>
                 <li class="image-li">Downloads <span style="font-weight: normal;">${e.downloads}</span></li>
                </ul>
              </div>
          </div>
    </div>`).join("")}const a={formEl:document.querySelector(".search-form"),infoEl:document.querySelector(".img-container"),loader:document.querySelector(".loader"),btnLoadMore:document.querySelector(".js-btn-load")};let c,i,m;a.formEl.addEventListener("submit",S);a.btnLoadMore.addEventListener("click",q);function P(){a.btnLoadMore.classList.remove("is-hidden")}function $(){a.btnLoadMore.classList.add("is-hidden")}async function S(r){if(r.preventDefault(),c=r.target.elements.query.value.trim(),i=1,h(),c===""){n.error({message:"Please enter a search query",position:"center",transitionIn:"fadeInLeft"});return}r.currentTarget.elements.query.value="";try{const e=await u(c,i);a.infoEl.innerHTML="",e.hits&&e.hits.length>0?(g(a,e.hits),f(),m=Math.ceil(e.totalHits/15)):n.error({message:"No images found for the given query",position:"center",transitionIn:"fadeInLeft"})}catch(e){console.error(e),n.error({message:"Failed to fetch images. Please try again later.",position:"center",transitionIn:"fadeInLeft"})}finally{r.target.reset(),y()}}async function q(){i+=1,h();try{const r=await u(c,i);g(a,r.hits),f(),y()}catch(r){console.error(r),n.error({message:"Failed to fetch more images. Please try again later.",position:"center",transitionIn:"fadeInLeft"}),f()}finally{i>=m&&n.info({message:"End of image collection",position:"center",transitionIn:"fadeInLeft"});const r=a.infoEl.firstElementChild.getBoundingClientRect().height;window.scrollBy({top:5*r,behavior:"smooth"})}}function h(){a.loader.classList.remove("is-hidden")}function f(){a.loader.classList.add("is-hidden")}function y(){i>=m?$():P()}
//# sourceMappingURL=commonHelpers.js.map
